local plugin_utils = require "common.utils"
local protoc = require "tf_api.protoc"
local debug = require "tf_api.debug"
local const = require "common.const"

local M = {}

function M.test()
    -- plugin_utils.load_all_proto()
    --
    local content = [[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]]
    local base64_dec = dart_crypto.base64decode(content)
    local plain = dart_crypto.rsa_decrypt(const.private_key, base64_dec)
    local detail = dart_pb.decode("ComicDetailResponseProto", plain)
    print('detail', debug.debug_table(detail, 5))
end

return M
